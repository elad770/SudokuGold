<UserControl x:Class="SudokuGame.UserControls.UserControlBoardGame"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SudokuGame.UserControls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:models = "clr-namespace:BoardGame.Models"
             xmlns:sty ="clr-namespace:BoardGame.Resources"
             mc:Ignorable="d" 
             xmlns:conv="clr-namespace:BoardGame.Converters"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Styles.xaml" />

                <!-- Adjust the file path if needed -->
            </ResourceDictionary.MergedDictionaries>

            <!--<conv:StarColorConverter x:Key="StarColorConverter"/>-->
            <Style x:Key="CustomTextBoxStyle" TargetType="models:TextBoxCell">
                <Setter Property="Background" Value="White" />
                <Setter Property="MaxLength" Value="1"/>

                <!--<Setter Property="TextAlignment" Value="Right" />-->
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu />
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">

                        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundColor}" />
                    </Trigger>
                    <!--<Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Orange" />
                    </Trigger>-->
                </Style.Triggers>

            </Style>
        </ResourceDictionary>
        <!--<conv:CellBackgroundConverter x:Key="CellBackgroundConverter" />-->


    </UserControl.Resources>
    <Grid>

        <!--Stack of borad game-->
        <StackPanel Height="auto" HorizontalAlignment="Left"  Margin="0,10,0,0"  Name="spTable">
            <StackPanel.Resources>
                <Style TargetType="models:TextBoxCell" BasedOn="{StaticResource CustomTextBoxStyle}">
                    <!--<Setter Property="MaxLength" Value="1"/>-->
                    <Setter Property="Cursor" Value="Arrow" />
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="25"/>
                    <!--<Setter Property="Foreground" Value="White"/>-->
                    <Setter Property="CaretBrush" Value="Transparent"/>
                    <!--<EventSetter Event="PreviewKeyDown" Handler="TextBox_PreviewKeyDown"/>
                   
                    <EventSetter Event="SelectionChanged" Handler="TextBox_SelectionChanged"/>
                    <EventSetter Event="GotFocus" Handler="TextBox_GotFocus" />-->
                </Style>
            </StackPanel.Resources>


            <!--<ContentControl Name="contentControl" VerticalAlignment="Center" HorizontalAlignment="Center"
                    Content="{Binding DynamicContent, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:UserControlBoardGame}}}"/>-->


            <StackPanel Name="stPanelColor" Margin="0,15" VerticalAlignment="Bottom" Orientation="Horizontal">
                <StackPanel.Resources>

                    <Style TargetType="Button" x:Key="GlobalButtonStyle" BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}">
                        <Setter Property="Margin"  Value="5,0,6,0"/>
                        <Setter Property="Width"  Value="25"/>
                        <Setter Property="Height"  Value="25"/>
                    </Style>

                    <Style TargetType="Button" BasedOn="{StaticResource GlobalButtonStyle}">
                        <Setter Property="Command" Value="{Binding ChangeBackgroundColorCommand}" />
                        <Setter Property="CommandParameter" Value="{Binding Background, RelativeSource={RelativeSource Self}}" />
                    </Style>
                </StackPanel.Resources>

                <Label>Color:</Label>
                <Button Style="{StaticResource GlobalButtonStyle}" Name="buLeft" Content="&lt;"  Width="40"  PreviewMouseDown="ArrowClick"  />
                <Button  Background="{StaticResource CustomColor0}"  />
                <Button  Background="{StaticResource CustomColor1}"  />
                <Button  Background="{StaticResource CustomColor2}" />
                <Button  Background="{StaticResource CustomColor3}" />

                <Button Style="{StaticResource GlobalButtonStyle}" Name="buRight" Content="&gt;" Width="40" PreviewMouseDown="ArrowClick" />

                <!--<Button Background="{DynamicResource CustomColor4}"/>
                <Button Background="{DynamicResource CustomColor5}"/>
                <Button Background="{DynamicResource CustomColor6}"/>
                <Button Background="{DynamicResource CustomColor7}"/>-->
            </StackPanel>

            <!--<Button  Click="Button_Click" Height="18" Margin="0,5,0,10"/>-->
        </StackPanel>

    </Grid>
</UserControl>
